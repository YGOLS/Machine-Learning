# Data Preprocessing Tools
from google.colab import drive
drive.mount('/content/drive')

## Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

## Importing the dataset
dataset = pd.read_csv('Data.csv')
X = dataset.iloc[:, :-1].values #iloc = indexlocation lalu : artinya rentang atau interval, :-1 brarti semua kecuali kolom terakhir --> [baris, kolom]
y = dataset.iloc[:, -1].values #brarti kolom trakhir saja yg diambil
print(X) #print variabel yg independen
print(y) #print variabel dependen yang ingin disimpulkan oleh data analyst

## Taking care of missing data 
from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan, strategy='mean') #Baru Objek blm disambungkan ke data
imputer.fit(X[:, 1:3]) #Fit method untuk mengkonek imputer ke matriks fitur/data untuk mengganti missing value pada kolom 2 dan 3 pada matriks fitur X
X[:, 1:3] = imputer.transform(X[:, 1:3]) #memperbarui X
print(X)

## Encoding categorical data 
### Encoding the Independent Variable 
#mengubah kolom country menjadi vektor 3x3 agar memudahkan machine learning kedepannya kita ubah menjadi numerik
# france menjadi vektor [1,0,0]
# Spain menjadi vektor [0,0,1]
# German menjadi vektor [0,1,0]
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
CT = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [0])], remainder = 'passthrough')
X= np.array(CT.fit_transform(X))
print(X)

### Encoding the Dependent Variable
from sklearn.preprocessing import LabelEncoder
LE = LabelEncoder()
y = LE.fit_transform(y)
print(y)


## Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2 , random_state = 1)
print(X_train)
print(X_test)
print(y_train)
print(y_test)

## Feature Scaling 
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train[:, 3:] = sc.fit_transform(X_train[:, 3:])
X_test[:, 3:] = sc.transform(X_test[:, 3:])
print(X_train)
print(X_test)













